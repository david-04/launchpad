#-----------------------------------------------------------------------------------------------------------------------
# Compile
#-----------------------------------------------------------------------------------------------------------------------

ifeq "$(call lp.tsc.is-enabled)" "true"

$(call lp.fn.phony-targets, compile tsc, $(call lp.tsc.get-description), $(call lp.tsc.get-targets))

$(call lp.tsc.get-targets) : $(call lp.tsc.get-prerequisites)
	echo Compiling... \
		$(if $(call lp.tsc.get-before-hook), && $(call lp.tsc.get-before-hook)) \
		&& $(call lp.tsc.get-command) \
		$(if $(call lp.tsc.get-after-hook), && $(call lp.tsc.get-after-hook))

endif

#-----------------------------------------------------------------------------------------------------------------------
# Bundle
#-----------------------------------------------------------------------------------------------------------------------

# ifeq "$(__LP_BUNDLER_ENABLED)" "true"
#     ifeq "$(call lp.bundler.get-default-command)" "$(call lp.bundler.get-command)"
#         ifeq "$(strip $(__LP_ESBUILD_MAPPINGS))" ""
#             $(call lp.bundler.disable)
#         endif
#     endif
# endif

# ifeq "$(call lp.bundler.is-enabled)" "true"

# .PHONY: bundle bundler pack webpack esbuild

# $(call doc.target, bundle, $(LP_BUNDLER_DESCRIPTION))

# bundle bundler pack webpack esbuild : $(LP_TSC_BUILDINFO);

# $(call lp.bundler.get-targets) : $(call lp.bundler.get-prerequisites)
# 	echo Bundling... \
# 		$(if $(call lp.bundler.get-before-hooks), && $(call lp.bundler.get-before-hooks)) \
# 		&& $(call lp.bundler.get-command) \
# 		$(if $(call lp.bundler.get-after-hooks), && $(call lp.bundler.get-after-hooks))

# endif

#-----------------------------------------------------------------------------------------------------------------------
# Help
#-----------------------------------------------------------------------------------------------------------------------

lp.help:
	$(info )
	# $(call lp.fn.if-true, lp.bundler.is-enabled, $(info ${}  bundle .......... $(call lp.bundler.get-description)))
	$(call lp.fn.if-true, lp.tsc.is-enabled,     $(info ${}  compile ......... $(call lp.tsc.get-description)))
	                                             $(info ${}  diagnostics ..... $(call lp.diagnostics.get-description))
	$(call lp.fn.if-true, lp.tsc.is-enabled,     $(info ${}  tsc ............. $(call lp.tsc.get-description)))

#-----------------------------------------------------------------------------------------------------------------------
# Diagnostics
#-----------------------------------------------------------------------------------------------------------------------

$(call lp.fn.phony-targets, diagnostics diagnose dump, $(call lp.diagnostics.get-description), lp.diagnostics.dump)

lp.diagnostics.dump : ;
	$(call lp.tsc.print-diagnostics)
