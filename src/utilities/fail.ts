//  _____ ____  ____   ___  ____
// | ____|  _ \|  _ \ / _ \|  _ \
// |  _| | |_) | |_) | | | | |_) |
// | |___|  _ <|  _ <| |_| |  _ <
// |_____|_| \_\_| \_\\___/|_| \_\

export const ERROR_BANNER = `

 _____ ____  ____   ___  ____
| ____|  _ \\|  _ \\ / _ \\|  _ \\
|  _| | |_) | |_) | | | | |_) |
| |___|  _ <|  _ <| |_| |  _ <
|_____|_| \\_\\_| \\_\\\\___/|_| \\_\\

`
    .replace(/^( *\r?\n)+/m, "")
    .replace(/( *\r?\n *)+$/m, "");

//----------------------------------------------------------------------------------------------------------------------
// An exception that doesn't require a stack trace.
//----------------------------------------------------------------------------------------------------------------------

export class FriendlyError extends Error {
    public constructor(message: string) {
        super(message);
    }
}

//----------------------------------------------------------------------------------------------------------------------
// Fail with the specified error message
//----------------------------------------------------------------------------------------------------------------------

export function fail(message: string): never {
    throw new FriendlyError(`ERROR: ${message}`);
}

//----------------------------------------------------------------------------------------------------------------------
// Get the error message
//----------------------------------------------------------------------------------------------------------------------

export function formatError(error?: unknown) {
    if (error instanceof FriendlyError) {
        return error.message;
    } else if (error instanceof Error) {
        return error;
    } else {
        return `ERROR: ${error}`;
    }
}
